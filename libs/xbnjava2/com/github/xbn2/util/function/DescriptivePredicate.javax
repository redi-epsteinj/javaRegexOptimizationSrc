package com.github.xbn2.util.function;

import java.util.function.Predicate;

public class DescriptivePredicate<T> implements Predicate<T> {
   private final Predicate<T> predicate;
   private final String description;

   public DescriptivePredicate(Predicate<T> predicate, String descriptionForToString) {
      this.predicate = predicate;
      this.description = descriptionForToString;
   }

   public Predicate<T> getPredicate() {
      return predicate;
   }

   @Override
   public String toString() {
      return getDescription();
   }

   public String getDescription() {
      return description;
   }

   @Override
   public boolean test(T t) {
      return predicate.test(t);
   }

   @Override
   public Predicate<T> and(Predicate<? super T> other) {
      return predicate.and(other);
   }

   @Override
   public Predicate<T> negate() {
      return predicate.negate();
   }

   @Override
   public Predicate<T> or(Predicate<? super T> other) {
      return predicate.or(other);
   }
}
